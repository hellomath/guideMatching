package com.kimtajo.guideMatching;

import android.content.Context;
import android.location.*;
import android.os.Bundle;
import android.provider.Settings;
import android.util.Log;
import android.widget.ImageButton;
import android.widget.TextView;
import android.widget.Toast;

import java.io.IOException;
import java.util.List;
import java.util.Locale;

/**
 * Created by Hellomath on 2014. 4. 2..
 */
public class MyLocalManager {
    private LocationListener locationListener;
    private LocationManager locationManager;
    private Geocoder geoCoder;
    private TextView LocationView;
    private String jusoFull;
    private double myLatitude = 0.0;
    private double myLongitude = 0.0;

    public void startLocations(LocationManager lm,Context context, TextView tv){
        this.locationManager = lm;
        this.LocationView = tv;
        for(String provider: locationManager.getAllProviders()){
            Log.d("hellomath", provider);
        }
        this.geoCoder = new Geocoder(context, Locale.US);
        this.locationListener = new LocationListener() {
            @Override
            public void onLocationChanged(Location location) {
                LocationView.setText(GetLocations(location));
                //Toast.makeText(context.getApplicationContext(), "주소: "+GetLocations(location), 1000).show();
            }

            @Override
            public void onStatusChanged(String s, int i, Bundle bundle) {

            }

            @Override
            public void onProviderEnabled(String s) {

            }

            @Override
            public void onProviderDisabled(String s) {

            }
        };

        this.locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this.locationListener);
        this.locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, this.locationListener);
    }

    public String GetLocations(Location location){
        StringBuffer juso = new StringBuffer();
        StringBuffer jusoFull = new StringBuffer();
        if(location != null){
            try{
/*
                List<Address> addrtest;
                addrtest = this.geoCoder.getFromLocationName("이태원동 128-4", 1);
                Log.d("getgetget", "gogogogo");
                for(Address addr:addrtest){
                    //juso.append(addr.getAddressLine(1));
                    Log.d("getgetget", "getLatitude: "+addr.getLatitude());
                    Log.d("getgetget", "getLongitude: "+addr.getLongitude());
                }
*/
                List<Address> addressList;
                addressList = this.geoCoder.getFromLocation(location.getLatitude(), location.getLongitude(), 1);
                this.myLatitude = location.getLatitude();
                this.myLongitude = location.getLongitude();
                for(Address addr:addressList){
                    int index = addr.getMaxAddressLineIndex();

                    for(int i = 0; i <= index ; i++){
                        jusoFull.append(addr.getAddressLine(i));
                        if(i<(index))
                            jusoFull.append(", ");
                    }
                    juso.append(addr.getAddressLine(1));
                    if(String.valueOf(jusoFull) != null){
                        this.jusoFull = String.valueOf(jusoFull);
                        Log.d("jusoFull", "jusoFull: "+String.valueOf(jusoFull));
                        Log.d("jusoFull", "this.jusoFull: "+this.jusoFull);
                    }else{
                        Log.d("jusoFull", "jusoFull T_T");
                    }

                }
            }catch(IOException e){e.printStackTrace();}
        }
        return String.valueOf(juso);
    }
    public String getJusoFull(){

        if(this.jusoFull != null)
            return this.jusoFull;
        else
            return "Null Data";
    }
    public double getMyLatitude(){
            return this.myLatitude;
    }
    public double getMyLongitude(){
        return this.myLongitude;
    }
    public void removeGPS(){
        this.locationManager.removeUpdates(this.locationListener);
    }

}
