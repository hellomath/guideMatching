package com.kimtajo.guideMatching;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.Drawable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.TextView;
import com.kimtajo.guideMatching.R;
import com.kimtajo.guideMatching.myListView;

import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;

/**
 * Created by Hellomath on 2014. 4. 7..
 */
public class myListAdapter extends ArrayAdapter<myListView> {
    private ArrayList<myListView> items;
    Context mContext;
    private final ImageDownloader imageDownloader = new ImageDownloader();
    public myListAdapter(Context context, int textViewResourceId, ArrayList<myListView> items){
        super(context, textViewResourceId, items);
        this.items = items;
        mContext = context;

    }
    @Override
    public View getView(int position, View convertView, ViewGroup parent){
        View v = convertView;
        if(v == null){
            LayoutInflater vi = LayoutInflater.from(mContext.getApplicationContext());
            v = vi.inflate(R.layout.list_item, null);

        }
        myListView item = items.get(position);
        if(item != null){
            TextView name = (TextView)v.findViewById(R.id.itemName);
            TextView tel = (TextView)v.findViewById(R.id.itemTel);
            TextView eval_cnt = (TextView)v.findViewById(R.id.itemEvalCount);
            ImageView thumbnail = (ImageView)v.findViewById(R.id.itemThumb);
            RatingBar eval_point = (RatingBar)v.findViewById(R.id.itemEvalPoint);



            if(name != null) name.setText(item.getName());
            if(tel != null) tel.setText(item.getTelNo());
            if(eval_cnt != null) eval_cnt.setText("("+item.getEvalCount()+")");
            if(eval_point != null) eval_point.setRating((float)item.getEvalPoint());
            if(thumbnail != null){
                imageDownloader.setMode(ImageDownloader.Mode.CORRECT);
                imageDownloader.download(item.getThumbUrl(), thumbnail);
                /*
                try {
                    URL myUrl = new URL(item.getThumbUrl());
                    Log.d("item image", item.getThumbUrl());
                    InputStream inputStream = (InputStream)myUrl.getContent();
                    Drawable drawable = Drawable.createFromStream(inputStream, null);
                    thumbnail.setImageDrawable(drawable);
                } catch (MalformedURLException e) {
                    Log.d("item image", e.getMessage().toString());
                } catch (IOException e) {
                    Log.d("item image", e.getMessage().toString());
                }
*/
            }

            //TextView name = (TextView)v.findViewById(R.id.itemName);
        }
        return v;
    }
}
/*

    public myListView getItem(int position) {
        return items.get(position);
    }

    public long getItemId(int position) {
        return items.get(position).getThumbUrl().hashCode();
    }

/* 나중에 적용!!
    @Override
    public View getView(int position, View convertView, ViewGroup parent){
        View v = convertView;
        ViewHolder vh;
        myListView item = items.get(position);
        if(v == null){
            LayoutInflater vi = LayoutInflater.from(mContext.getApplicationContext());
            v = vi.inflate(R.layout.list_item, null);
            vh = new ViewHolder();
            vh.itemName = (TextView)v.findViewById(R.id.itemName);
            vh.itemTel = (TextView)v.findViewById(R.id.itemTel);
            vh.itemEvalCount = (TextView)v.findViewById(R.id.itemEvalCount);
            vh.itemEvalPoint = (RatingBar)v.findViewById(R.id.itemEvalPoint);
            vh.itemThumb = (ImageView)v.findViewById(R.id.itemThumb);
            v.setTag(vh);
        }
        else{
            vh =(ViewHolder)v.getTag();
        }

        if(vh.itemName != null) vh.itemName.setText(item.getName());
        if(vh.itemTel != null) vh.itemTel.setText(item.getTelNo());
        if(vh.itemEvalCount != null) vh.itemEvalCount.setText("("+item.getEvalCount()+")");
        if(vh.itemEvalPoint != null) vh.itemEvalPoint.setRating((float)item.getEvalPoint());
        if(vh.itemThumb != null){
            BitmapFactory.Options op = new BitmapFactory.Options();
            op.inSampleSize = 8;

            if(item.getThumbUrl().length() <= 0){
                Resources res = mContext.getResources();
                Bitmap bit = BitmapFactory.decodeResource(res, R.drawable.img_photo_noimg);
            }
            else if(item.getThumbUrl().length() > 0){
                try {
                    URL myUrl = new URL(item.getThumbUrl());
                    Log.d("item image", item.getThumbUrl());
                    InputStream inputStream = (InputStream)myUrl.getContent();

                    Bitmap bit = BitmapFactory.decodeStream(inputStream);
                    if(bit != null)
                        vh.itemThumb.setImageBitmap(bit);
                    else{
                        ImageDownloader imgdown = new ImageDownloader();
                        imgdown.download(item.getThumbUrl(), vh.itemThumb, mContext);
                    }

                } catch (MalformedURLException e) {
                    Log.d("item image", e.getMessage().toString());
                } catch (IOException e) {
                    Log.d("item image", e.getMessage().toString());
                }
            }



        }
        return v;
    }

class ViewHolder{
    ImageView itemThumb;
    TextView itemName, itemTel, itemEvalCount;
    RatingBar itemEvalPoint;
}
*/